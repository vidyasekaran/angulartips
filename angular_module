 Angular Modules
 ---------------
 
 The Angular module system is how Angular bundles code into reusable modules. The
Angular system code itself is modularized using this module system. Many third-parties
provide additional functionality to Angular using modules, which you can easy include
into your application.

For example, you import the Component from Angular:
import { Component } from '@angular/core';

Here is how to import the date picker from ngx-bootstrap:
import { DatepickerModule } from 'ngx-bootstrap/datepicker';

import {AppComponent} from './app.component';
Here are some more import syntaxes:

• Import all:
import * as myModule from 'my-module';

• With named import, the name needs to exactly match the name of an
object exported in the module:
import { myMember } from 'my-module';

For multiple named imports from a module, the names need to
exactly match the names of objects exported in the module:
import { foo, bar } from 'my-module';

• With a default import from a module, the name doesn’t need to
match any object exported in the module. It can be an alias. It knows
it has to import the default object from the module:
import myDefault from 'my-module';

Root Module - Your Angular application can contain multiple modules. But it always has a starting
point, a module that it uses to bootstrap itself. This is the root module, often called the
AppModule.

Routing Module - It allows the user to map components to URLs and navigate the user interface. When we use the CLI to build 
an Angular application, it builds a separate module for your application’s routing, usually in the file app-routing.ts.

Feature Modules - Domain-driven design (DDD) is an approach to software development the address complex 
needs by connecting the implementation to an evolving model. 

Shared Modules - You can think of feature modules as blocks of code that aren’t shared. Shared modules are the opposite—they 
contain the most commonly used code that’s modularized so it can be reused as much as possible. When required, the root 
module can include as many shared modules as required.

How to build and publish an Angular module
https://medium.com/@cyrilletuzi/how-to-build-and-publish-an-angular-module-7ad19c0b4464
